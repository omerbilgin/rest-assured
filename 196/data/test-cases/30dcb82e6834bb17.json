{"uid":"30dcb82e6834bb17","name":"restAssuredWithMockServerTest()","fullName":"com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest","historyId":"4ecd10d7a046447ecd17b2af33ffbd95","time":{"start":1682355767182,"stop":1682355769286,"duration":2104},"description":"Assertion for single user response from mock test api","descriptionHtml":"<p>Assertion for single user response from mock test api</p>\n","status":"broken","statusMessage":"exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"6b8f2e31-b05b-4f12-9696-cba1407ad6c0\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation","statusTrace":"java.lang.IllegalArgumentException: exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"6b8f2e31-b05b-4f12-9696-cba1407ad6c0\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:205)\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:158)\n\tat org.mockserver.client.MockServerClient.upsert(MockServerClient.java:1517)\n\tat org.mockserver.client.ForwardChainExpectation.respond(ForwardChainExpectation.java:84)\n\tat com.bilgin.RestAssuredWithMockServerTest.setExpectation(RestAssuredWithMockServerTest.java:74)\n\tat com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest(RestAssuredWithMockServerTest.java:50)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:146)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeTest","time":{"start":1682355753594,"stop":1682355767137,"duration":13543},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bilgin.RestAssuredWithMockServerTest]/[method:restAssuredWithMockServerTest()]"},{"name":"owner","value":"Bilgin"},{"name":"feature","value":"RestAssured"},{"name":"host","value":"fv-az791-309"},{"name":"thread","value":"2345@fv-az791-309.ForkJoinPool-1-worker-3(14)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testClass","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testMethod","value":"restAssuredWithMockServerTest"},{"name":"suite","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Bilgin","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":36,"unknown":0,"total":37},"items":[{"uid":"9afafdbad18aefb9","reportUrl":"https://omerbilgin.github.io/rest-assured/195//#testresult/9afafdbad18aefb9","status":"passed","time":{"start":1682355755955,"stop":1682355759905,"duration":3950}},{"uid":"4feeb554c656945a","reportUrl":"https://omerbilgin.github.io/rest-assured/194//#testresult/4feeb554c656945a","status":"passed","time":{"start":1682355738728,"stop":1682355742125,"duration":3397}},{"uid":"50d985d218d83cff","reportUrl":"https://omerbilgin.github.io/rest-assured/193//#testresult/50d985d218d83cff","status":"passed","time":{"start":1680627688110,"stop":1680627691379,"duration":3269}},{"uid":"2950a79414a6885f","reportUrl":"https://omerbilgin.github.io/rest-assured/192//#testresult/2950a79414a6885f","status":"passed","time":{"start":1679331951761,"stop":1679331954742,"duration":2981}},{"uid":"ad713a9b2d726ae3","reportUrl":"https://omerbilgin.github.io/rest-assured/191//#testresult/ad713a9b2d726ae3","status":"passed","time":{"start":1679331851891,"stop":1679331855165,"duration":3274}},{"uid":"cc130e7322e95357","reportUrl":"https://omerbilgin.github.io/rest-assured/190//#testresult/cc130e7322e95357","status":"passed","time":{"start":1679002398471,"stop":1679002401009,"duration":2538}},{"uid":"3261a0f44ed56f6f","reportUrl":"https://omerbilgin.github.io/rest-assured/189//#testresult/3261a0f44ed56f6f","status":"passed","time":{"start":1679002358307,"stop":1679002360767,"duration":2460}},{"uid":"ae82407c099adcd","reportUrl":"https://omerbilgin.github.io/rest-assured/188//#testresult/ae82407c099adcd","status":"passed","time":{"start":1679002328214,"stop":1679002330668,"duration":2454}},{"uid":"ddfaaa1cf2677e55","reportUrl":"https://omerbilgin.github.io/rest-assured/187//#testresult/ddfaaa1cf2677e55","status":"passed","time":{"start":1678810514476,"stop":1678810517061,"duration":2585}},{"uid":"d85a1149b20c9e1d","reportUrl":"https://omerbilgin.github.io/rest-assured/186//#testresult/d85a1149b20c9e1d","status":"passed","time":{"start":1677518114618,"stop":1677518117868,"duration":3250}},{"uid":"5b7158f42cf2adfb","reportUrl":"https://omerbilgin.github.io/rest-assured/185//#testresult/5b7158f42cf2adfb","status":"passed","time":{"start":1677517965759,"stop":1677517968285,"duration":2526}},{"uid":"57679e1140780ddd","reportUrl":"https://omerbilgin.github.io/rest-assured/184//#testresult/57679e1140780ddd","status":"passed","time":{"start":1677055555173,"stop":1677055557799,"duration":2626}},{"uid":"d8ad0ec74caf5332","reportUrl":"https://omerbilgin.github.io/rest-assured/183//#testresult/d8ad0ec74caf5332","status":"passed","time":{"start":1675786142104,"stop":1675786147872,"duration":5768}},{"uid":"39e137957bbaf66a","reportUrl":"https://omerbilgin.github.io/rest-assured/182//#testresult/39e137957bbaf66a","status":"passed","time":{"start":1675785982192,"stop":1675785986417,"duration":4225}},{"uid":"98b3f9945a396d57","reportUrl":"https://omerbilgin.github.io/rest-assured/181//#testresult/98b3f9945a396d57","status":"passed","time":{"start":1675700200938,"stop":1675700205574,"duration":4636}},{"uid":"fdfa3a27fccbccd6","reportUrl":"https://omerbilgin.github.io/rest-assured/180//#testresult/fdfa3a27fccbccd6","status":"passed","time":{"start":1675700064741,"stop":1675700068817,"duration":4076}},{"uid":"c50e368543eb4c4e","reportUrl":"https://omerbilgin.github.io/rest-assured/179//#testresult/c50e368543eb4c4e","status":"passed","time":{"start":1675095710122,"stop":1675095713717,"duration":3595}},{"uid":"ac72c4e99bb61ad0","reportUrl":"https://omerbilgin.github.io/rest-assured/178//#testresult/ac72c4e99bb61ad0","status":"passed","time":{"start":1675095688907,"stop":1675095694156,"duration":5249}},{"uid":"f49dd2ddcc56a64","reportUrl":"https://omerbilgin.github.io/rest-assured/177//#testresult/f49dd2ddcc56a64","status":"passed","time":{"start":1675095650814,"stop":1675095654582,"duration":3768}},{"uid":"1b04f3ea4851d653","reportUrl":"https://omerbilgin.github.io/rest-assured/174//#testresult/1b04f3ea4851d653","status":"passed","time":{"start":1675095562228,"stop":1675095566115,"duration":3887}}]},"tags":[]},"source":"30dcb82e6834bb17.json","parameterValues":[]}