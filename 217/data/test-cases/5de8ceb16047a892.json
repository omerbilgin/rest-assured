{"uid":"5de8ceb16047a892","name":"restAssuredWithMockServerTest()","fullName":"com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest","historyId":"4ecd10d7a046447ecd17b2af33ffbd95","time":{"start":1685552453118,"stop":1685552454506,"duration":1388},"description":"Assertion for single user response from mock test api","descriptionHtml":"<p>Assertion for single user response from mock test api</p>\n","status":"broken","statusMessage":"exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"41054519-72a6-465a-9450-9932b79e21ca\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation","statusTrace":"java.lang.IllegalArgumentException: exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"41054519-72a6-465a-9450-9932b79e21ca\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:205)\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:158)\n\tat org.mockserver.client.MockServerClient.upsert(MockServerClient.java:1517)\n\tat org.mockserver.client.ForwardChainExpectation.respond(ForwardChainExpectation.java:84)\n\tat com.bilgin.RestAssuredWithMockServerTest.setExpectation(RestAssuredWithMockServerTest.java:74)\n\tat com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest(RestAssuredWithMockServerTest.java:50)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:146)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeTest","time":{"start":1685552444110,"stop":1685552453115,"duration":9005},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bilgin.RestAssuredWithMockServerTest]/[method:restAssuredWithMockServerTest()]"},{"name":"owner","value":"Bilgin"},{"name":"feature","value":"RestAssured"},{"name":"host","value":"fv-az445-994"},{"name":"thread","value":"2352@fv-az445-994.ForkJoinPool-1-worker-3(14)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testClass","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testMethod","value":"restAssuredWithMockServerTest"},{"name":"suite","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Bilgin","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"5472243c1730901e","reportUrl":"https://omerbilgin.github.io/rest-assured/214//#testresult/5472243c1730901e","status":"passed","time":{"start":1685034029848,"stop":1685034032665,"duration":2817}},{"uid":"a930936fea128056","reportUrl":"https://omerbilgin.github.io/rest-assured/213//#testresult/a930936fea128056","status":"passed","time":{"start":1684947649715,"stop":1684947652362,"duration":2647}},{"uid":"d578798aa8b1e80d","reportUrl":"https://omerbilgin.github.io/rest-assured/212//#testresult/d578798aa8b1e80d","status":"passed","time":{"start":1684342867335,"stop":1684342870234,"duration":2899}},{"uid":"b86abe8967b88dfe","reportUrl":"https://omerbilgin.github.io/rest-assured/210//#testresult/b86abe8967b88dfe","status":"passed","time":{"start":1684342845896,"stop":1684342848191,"duration":2295}},{"uid":"4f30c02b9dd58830","reportUrl":"https://omerbilgin.github.io/rest-assured/209//#testresult/4f30c02b9dd58830","status":"passed","time":{"start":1683925665171,"stop":1683925667798,"duration":2627}},{"uid":"905fb6be8470664d","reportUrl":"https://omerbilgin.github.io/rest-assured/208//#testresult/905fb6be8470664d","status":"passed","time":{"start":1683925647668,"stop":1683925650045,"duration":2377}},{"uid":"3edfa86f991225c6","reportUrl":"https://omerbilgin.github.io/rest-assured/207//#testresult/3edfa86f991225c6","status":"passed","time":{"start":1683925625140,"stop":1683925627509,"duration":2369}},{"uid":"c22dc42c2ff659a6","reportUrl":"https://omerbilgin.github.io/rest-assured/206//#testresult/c22dc42c2ff659a6","status":"passed","time":{"start":1683925596962,"stop":1683925599170,"duration":2208}},{"uid":"6daa07db4da939f7","reportUrl":"https://omerbilgin.github.io/rest-assured/205//#testresult/6daa07db4da939f7","status":"passed","time":{"start":1683910881893,"stop":1683910885018,"duration":3125}},{"uid":"a5c9911b88d92c23","reportUrl":"https://omerbilgin.github.io/rest-assured/202//#testresult/a5c9911b88d92c23","status":"passed","time":{"start":1683910869348,"stop":1683910872343,"duration":2995}}]},"tags":[]},"source":"5de8ceb16047a892.json","parameterValues":[]}