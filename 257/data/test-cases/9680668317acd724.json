{"uid":"9680668317acd724","name":"restAssuredWithMockServerTest()","fullName":"com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest","historyId":"4ecd10d7a046447ecd17b2af33ffbd95","time":{"start":1701792560695,"stop":1701792562207,"duration":1512},"description":"Assertion for single user response from mock test api","descriptionHtml":"<p>Assertion for single user response from mock test api</p>\n","status":"broken","statusMessage":"exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"12d48a85-401d-4d60-a76b-65f4eb431c36\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation","statusTrace":"java.lang.IllegalArgumentException: exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"12d48a85-401d-4d60-a76b-65f4eb431c36\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:205)\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:158)\n\tat org.mockserver.client.MockServerClient.upsert(MockServerClient.java:1517)\n\tat org.mockserver.client.ForwardChainExpectation.respond(ForwardChainExpectation.java:84)\n\tat com.bilgin.RestAssuredWithMockServerTest.setExpectation(RestAssuredWithMockServerTest.java:74)\n\tat com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest(RestAssuredWithMockServerTest.java:50)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:146)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeTest","time":{"start":1701792552876,"stop":1701792560660,"duration":7784},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bilgin.RestAssuredWithMockServerTest]/[method:restAssuredWithMockServerTest()]"},{"name":"owner","value":"Bilgin"},{"name":"feature","value":"RestAssured"},{"name":"host","value":"fv-az1016-860"},{"name":"thread","value":"2405@fv-az1016-860.ForkJoinPool-1-worker-3(15)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testClass","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testMethod","value":"restAssuredWithMockServerTest"},{"name":"suite","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Bilgin","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":21,"unknown":0,"total":22},"items":[{"uid":"ac37076e1d32c8ba","reportUrl":"https://omerbilgin.github.io/rest-assured/255//#testresult/ac37076e1d32c8ba","status":"passed","time":{"start":1701792551962,"stop":1701792555390,"duration":3428}},{"uid":"fb77d403e87f5297","reportUrl":"https://omerbilgin.github.io/rest-assured/253//#testresult/fb77d403e87f5297","status":"passed","time":{"start":1701720052414,"stop":1701720055438,"duration":3024}},{"uid":"452fcfcfb4de7545","reportUrl":"https://omerbilgin.github.io/rest-assured/252//#testresult/452fcfcfb4de7545","status":"passed","time":{"start":1701720043244,"stop":1701720046364,"duration":3120}},{"uid":"8960c2007c93dc1a","reportUrl":"https://omerbilgin.github.io/rest-assured/251//#testresult/8960c2007c93dc1a","status":"passed","time":{"start":1701720030496,"stop":1701720033835,"duration":3339}},{"uid":"768bcb96621fcc2f","reportUrl":"https://omerbilgin.github.io/rest-assured/250//#testresult/768bcb96621fcc2f","status":"passed","time":{"start":1701720018385,"stop":1701720021619,"duration":3234}},{"uid":"a172ba45106e9fa7","reportUrl":"https://omerbilgin.github.io/rest-assured/249//#testresult/a172ba45106e9fa7","status":"passed","time":{"start":1701719994552,"stop":1701719997825,"duration":3273}},{"uid":"ed40e947b80e9d8f","reportUrl":"https://omerbilgin.github.io/rest-assured/248//#testresult/ed40e947b80e9d8f","status":"passed","time":{"start":1701719967942,"stop":1701719971220,"duration":3278}},{"uid":"92a0becda24b4bdc","reportUrl":"https://omerbilgin.github.io/rest-assured/247//#testresult/92a0becda24b4bdc","status":"passed","time":{"start":1701707282034,"stop":1701707285390,"duration":3356}},{"uid":"3c0f5a10c2b75de","reportUrl":"https://omerbilgin.github.io/rest-assured/246//#testresult/3c0f5a10c2b75de","status":"passed","time":{"start":1701275444205,"stop":1701275447463,"duration":3258}},{"uid":"1cd5e430e4bd4be7","reportUrl":"https://omerbilgin.github.io/rest-assured/245//#testresult/1cd5e430e4bd4be7","status":"passed","time":{"start":1696437376946,"stop":1696437382351,"duration":5405}},{"uid":"a5e3b0842d192a3c","reportUrl":"https://omerbilgin.github.io/rest-assured/241//#testresult/a5e3b0842d192a3c","status":"passed","time":{"start":1696437365825,"stop":1696437370583,"duration":4758}},{"uid":"d5ee400affdac6ae","reportUrl":"https://omerbilgin.github.io/rest-assured/243//#testresult/d5ee400affdac6ae","status":"passed","time":{"start":1696437356654,"stop":1696437361609,"duration":4955}},{"uid":"1137c889aff01582","reportUrl":"https://omerbilgin.github.io/rest-assured/242//#testresult/1137c889aff01582","status":"passed","time":{"start":1696437346964,"stop":1696437351278,"duration":4314}},{"uid":"e58646344a3b7039","reportUrl":"https://omerbilgin.github.io/rest-assured/240//#testresult/e58646344a3b7039","status":"passed","time":{"start":1696422792098,"stop":1696422796255,"duration":4157}},{"uid":"e4fcf037210f3939","reportUrl":"https://omerbilgin.github.io/rest-assured/239//#testresult/e4fcf037210f3939","status":"passed","time":{"start":1696350945314,"stop":1696350950356,"duration":5042}},{"uid":"b2d3a69764375c40","reportUrl":"https://omerbilgin.github.io/rest-assured/238//#testresult/b2d3a69764375c40","status":"passed","time":{"start":1696272723751,"stop":1696272728327,"duration":4576}},{"uid":"5850c1217ca9bc7c","reportUrl":"https://omerbilgin.github.io/rest-assured/237//#testresult/5850c1217ca9bc7c","status":"passed","time":{"start":1694191961736,"stop":1694191964337,"duration":2601}},{"uid":"1bfcf1627eb9761f","reportUrl":"https://omerbilgin.github.io/rest-assured/236//#testresult/1bfcf1627eb9761f","status":"passed","time":{"start":1694117876632,"stop":1694117879402,"duration":2770}},{"uid":"a14abba503ec2bf2","reportUrl":"https://omerbilgin.github.io/rest-assured/235//#testresult/a14abba503ec2bf2","status":"passed","time":{"start":1694105570057,"stop":1694105573759,"duration":3702}},{"uid":"4a74cd096ab51d0f","reportUrl":"https://omerbilgin.github.io/rest-assured/234//#testresult/4a74cd096ab51d0f","status":"passed","time":{"start":1694067452824,"stop":1694067455334,"duration":2510}}]},"tags":[]},"source":"9680668317acd724.json","parameterValues":[]}